

#
# IMPORTANT
#
# References with = < will NOT work here
#


# Creates persistent ParseFunc setup for non-HTML content. This is recommended to use (as a reference!)
lib.parseFunc {
	makelinks = 1
	makelinks.http.keep = path
	makelinks.http.extTarget = _blank
	makelinks.mailto.keep = path
	tags {
		link = TEXT
		link {
			current = 1
			typolink.parameter.data = parameters : allParams
			typolink.extTarget = _blank
			typolink.target =
			parseFunc.constants =1
		}
	}
	allowTags = b,i,u,a,img,br,div,center,pre,code,tt,var,hr,sub,sup,p,strong,em,li,ul,ol,dt,dl,dd,blockquote,cite,dfn,strike,del,ins,span,h1,h2,h3,h4,h5,h6,address
	denyTags = *
	sword = <span class="csc-sword">|</span>
	constants = 1

	nonTypoTagStdWrap.HTMLparser = 1
	nonTypoTagStdWrap.HTMLparser {
		keepNonMatchedTags = 1
		htmlSpecialChars = 2
	}
}

# Creates persistent ParseFunc setup for RTE content (which is mainly HTML) based on the "ts_css" transformation.
lib.parseFunc_RTE < lib.parseFunc
lib.parseFunc_RTE {
	//  makelinks >
	# Processing <table> and <blockquote> blocks separately
	externalBlocks = table, blockquote, ol,ul, div
	externalBlocks {
		# The blockquote content is passed into parseFunc again...
		blockquote.stripNL=1
		blockquote.callRecursive=1
		blockquote.callRecursive.tagStdWrap.HTMLparser = 1

		ol.stripNL=1
		ol.stdWrap.parseFunc < lib.parseFunc

		ul.stripNL=1
		ul.stdWrap.parseFunc < lib.parseFunc

		table.stripNL=1
		table.stdWrap.HTMLparser = 1
		table.stdWrap.HTMLparser.tags.table.fixAttrib.class {
			default = contenttable
			always = 1
			list = contenttable
		}
		table.stdWrap.HTMLparser.keepNonMatchedTags = 1
		table.HTMLtableCells=1
		table.HTMLtableCells {
			default.callRecursive=1
			addChr10BetweenParagraphs=1
		}
		div.stripNL = 1
		div.callRecursive = 1
	}
	nonTypoTagStdWrap.encapsLines {
		encapsTagList = p,pre,h1,h2,h3,h4,h5,h6
		remapTag.DIV = P
		// this seems not to work
		remapTag.I = EM
		remapTag.B = STRONG
		nonWrappedTag = P
#		innerStdWrap_all.ifBlank = &nbsp;
		addAttributes.P.class.setOnly=blank
	}
	nonTypoTagStdWrap.HTMLparser = 1
	nonTypoTagStdWrap.HTMLparser {
		keepNonMatchedTags = 1
		htmlSpecialChars = 2
		// this works
		tags {
            b.remap = strong
            i.remap = em
        }
	}
}


proc {
		parseFunc < lib.parseFunc_RTE
	}

